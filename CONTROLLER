import flet as ft
import networkx as nx

from database.DAO import DAO


class Controller:
    def __init__(self, view, model):
        # the view, with the graphical elements of the UI
        self._view = view
        # the model, which implements the logic of the program and holds the data
        self._model = model




    def fillDD(self):

        for y in range(2015,2019):
            self._view.ddyear.options.append(ft.dropdown.Option(f'{y}'))

        metodi = self._model.get_metodi()
        for m in metodi:
            self._view.ddmetodi.options.append(ft.dropdown.Option(data=m, text=m.Order_method_type))



    def handle_graph(self, e):
        self._view.txt_result.controls.clear()
        year = self._view.ddyear.value
        metodi = self._view.ddmetodi.value
        s = self._view.txtN.value

        if year is None or metodi is None:
            self._view.txt_result.controls.append(ft.Text('Selezionare anno e metodo'))
            self._view.update_page()
            return

        try:
            s_int = float(s)

        except:
            self._view.txt_result.controls.append(ft.Text(f"Errore nell'inserimento"))
            self._view.update_page()
            return

        self._view.txt_result.controls.append(ft.Text('Grafo creato correttamente!'))
        grafo = self._model.build_graph(year, metodi, s_int)
        nNodi = grafo.number_of_nodes()
        nArchi = grafo.number_of_edges()
        self._view.txt_result.controls.append(ft.Text(f'Il grafo ha {nNodi} nodi e {nArchi} archi'))
        self._view.update_page()

    def handle_calcola_prodotti(self, e):
        metodo = self._view.ddmetodi.value
        anno = self._view.ddyear.value
        self._view.txt_result.controls.clear()
        self._view.txt_result.controls.append(ft.Text(f"------------------------------"))
        self._view.txt_result.controls.append(ft.Text(f"I prodotti pi√π redditizi sono:"))
        reddito_data = self._model.get_reddito(metodo, anno)
        count = 0
        for prodotto, archi_entranti, ricavo in reddito_data:
            count += 1
            self._view.txt_result.controls.append(
                ft.Text(f"Prodotto: {prodotto}, Archi entranti: {archi_entranti}, Ricavo totale: {ricavo}"))
            if count == 5:
                break
        self._view.update_page()

    def handle_path(self, e):
        self._view.txt_result.controls.clear()
        best, dizio = self._model.getBestPath()
        self._view.txt_result.controls.append(
        ft.Text(f"Percorso che massimizza la lunghezza: "))
        for b in best:
            self._view.txt_result.controls.append(ft.Text(f"Prodotto {b.Product_number} ricavo totale {dizio[b.Product_number]}"))
        self._view.update_page()
